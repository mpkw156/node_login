*로그인 유지 
1) 쿠키 
- 웹 브라우저가 서버에 접속하면 서버가 직접 쿠키를 웹브라우저에 전달.
- 웹 브라우저는 그 쿠키를 저장.
- 하지만 쿠키는 보안에 취약함.
2) 세션 
- 웹 브라우저가 서버에 접속하면 서버가 웹브라우저에 데이터 저장
- 오직 사용자의 식별자인 id 값만 블라우저에 저장
- 식별자만 사용자의 컴퓨터에 저장하고 실제 데이터는 서버에 저장
- 세션은 고유의 식별자를 이용해서 서버에 저장된 값을 가져온다.

*Sequelize
- node에서 DB와 연결할 때 쓰이는 메소드
1)migration
- 데이터를 갱신하려고 할 때 운영중인 서비스에서는 힘들다
- 그 점을 보완하기 위해 나온 개념

*해시 함수
- 데이터의 효율적 관리를 목적으로 임의의 길이의 데이터를 고정된 길이의 데이터로 매핑하는 함수.
- 회원의 개인정보는 관리자를 포함하여 누구도 볼 수 있으면 안되기 때문에 DB에 저장할 때 암호화하여 저장.
- 역으로 복호화를 할 수 없는 단방향 암호화 방식
1)crypto 암호화
ex)

    let inputPassword = body.password;
    let hashPassword = crypto.createHash("sha512").update(inputPassword + salt).digest("hex");
2)pbkd2 암호화
ex)
    crypto.pbkdf2(body.password, buf.toString('base64'), 100000, 64, 'sha512', async function(err, key){
      result = await models.user.create({
        name: body.userName,
        email: body.userEmail,
        password: key,
        salt: buf
    })

*seed
- 서버가 시작될 때 어플리케이션이 가지고 있어야 할 정적인 데이터들을 DB에 추가해주는 기능.

*JWT